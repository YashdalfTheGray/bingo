on:
  push:
    branches:
      - stable
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.prettierrc'
      - 'docs'
      - 'docs/**'
      - 'ava.**'
      - '.env*'
      - '.nvmrc'
      - 'tslint.json'
      - 'test'
      - 'test/**'

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.7.0

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bingo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.8.0
        with:
          task-definition: .github/workflows/task.json
          container-name: website
          image: ${{ steps.build-image.outputs.image }}

      - name: Update the service with the new task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2.4.0
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bingo-service
          cluster: main
          wait-for-service-stability: true
